# SSSOM is OBO-agnostic and doesn't know about the implicit OBO prefix
# rule (PFX -> http://purl.obolibrary.org/obo/PFX_); *all* prefixes must
# be explicitly declared.
prefix AEO:       <http://purl.obolibrary.org/obo/AEO_>
prefix BFO:       <http://purl.obolibrary.org/obo/BFO_>
prefix BSPO:      <http://purl.obolibrary.org/obo/BSPO_>
prefix CARO:      <http://purl.obolibrary.org/obo/CARO_>
prefix CL:        <http://purl.obolibrary.org/obo/CL_>
prefix DHBA:      <http://purl.obolibrary.org/obo/DHBA_>
prefix EFO:       <http://purl.obolibrary.org/obo/EFO_>
prefix EHDAA2:    <http://purl.obolibrary.org/obo/EHDAA2_>
prefix EMAPA:     <http://purl.obolibrary.org/obo/EMAPA_>
prefix FBbt:      <http://purl.obolibrary.org/obo/FBbt_>
prefix FBdv:      <http://purl.obolibrary.org/obo/FBdv_>
prefix FMA:       <http://purl.obolibrary.org/obo/FMA_>
prefix GO:        <http://purl.obolibrary.org/obo/GO_>
prefix HAO:       <http://purl.obolibrary.org/obo/HAO_>
prefix HBA:       <http://purl.obolibrary.org/obo/HBA_>
prefix HsapDv:    <http://purl.obolibrary.org/obo/HsapDv_>
prefix IAO:       <http://purl.obolibrary.org/obo/IAO_>
prefix KUPO:      <http://purl.obolibrary.org/obo/KUPO_>
prefix MA:        <http://purl.obolibrary.org/obo/MA_>
prefix MmusDv:    <http://purl.obolibrary.org/obo/MmusDv_>
prefix NCBITaxon: <http://purl.obolibrary.org/obo/NCBITaxon_>
prefix NCIT:      <http://purl.obolibrary.org/obo/NCIT_>
prefix OG:        <http://purl.obolibrary.org/obo/OG_>
prefix OGES:      <http://purl.obolibrary.org/obo/OGES_>
prefix OIO:       <http://www.geneontology.org/formats/oboInOwl#>
prefix PBA:       <http://purl.obolibrary.org/obo/PBA_>
prefix RO:        <http://purl.obolibrary.org/obo/RO_>
prefix SCTID:     <http://purl.obolibrary.org/obo/SCTID_>
prefix SPD:       <http://purl.obolibrary.org/obo/SPD_>
prefix TADS:      <http://purl.obolibrary.org/obo/TADS_>
prefix TGMA:      <http://purl.obolibrary.org/obo/TGMA_>
prefix UBERON:    <http://purl.obolibrary.org/obo/UBERON_>
prefix WBbt:      <http://purl.obolibrary.org/obo/WBbt_>
prefix WBls:      <http://purl.obolibrary.org/obo/WBls_>
prefix XAO:       <http://purl.obolibrary.org/obo/XAO_>
prefix ZFA:       <http://purl.obolibrary.org/obo/ZFA_>
prefix ZFS:       <http://purl.obolibrary.org/obo/ZFS_>

# The relation to use in the existential restrictions between Uberon/CL
# terms and their taxon-specific equivalents: part_of (BFO:0000050) for
# most cases, except for life stage terms where we use occurs_in
# (BFO:0000066) instead.
set_var("TAXREL", BFO:0000050);
set_var("TAXREL", BFO:0000066, "%object_id is_a UBERON:0000104");
set_var("TAXREL", BFO:0000066, "%object_id is_a UBERON:0000105");

# Those are not present in Uberon, we must declare them before we can
# use them in bridges.
declare_class(NCBITaxon:6893, NCBITaxon:6939, NCBITaxon:44484);

# Make sure UBERON and CL classes are on the object side.
subject==UBERON:* || subject==CL:* -> invert();

# Ignore any mapping to something else than UBERON or CL.
!(object==UBERON:* || object==CL:*) -> stop();

# Ignore any mapping to an inexistent or obsolete UBERON/CL class.
predicate==* -> check_object_existence();

# Ignore any mapping with a predicate other than those four.
!(predicate==skos:exactMatch
  || predicate==skos:narrowMatch
  || predicate==skos:broadMatch
  || predicate==semapv:crossSpeciesExactMatch) -> stop();

# Generate cross-reference annotations (for backward compatibility).
[xrefs] predicate==* -> annotate_object(OIO:hasDbXref, "%subject_curie");

# Bridging axiom-generating rules.
# The highly repetitive nature of those rules stems from the fact that
# we need separate rules for each foreign ontology and for both Uberon
# and CL, if we want to be able to send the corresponding axioms to
# separate bridge files.

# Taxon-neutral bridges.
[aeo-uberon] subject==AEO:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (AEO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[aeo-cl] subject==AEO:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (AEO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}

[bfo-uberon] subject==BFO:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (BFO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[bfo-cl] subject==BFO:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (BFO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}

[bspo-uberon] subject==BSPO:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (BSPO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[bspo-cl] subject==BSPO:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (BSPO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}

[caro-uberon] subject==CARO:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (CARO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[caro-cl] subject==CARO:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (CARO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}

[efo-uberon] subject==EFO:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (EFO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[efo-cl] subject==EFO:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (EFO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}

[go-uberon] subject==GO:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (GO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[go-cl] subject==GO:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (GO)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}

[ncit-uberon] subject==NCIT:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (NCIT)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[ncit-cl] subject==NCIT:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (NCIT)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}

[og-uberon] subject==OG:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (OG)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[og-cl] subject==OG:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (OG)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}

[oges-uberon] subject==OGES:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (OGES)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[oges-cl] subject==OGES:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (OGES)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}

[sctid-uberon] subject==SCTID:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (SCTID)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}
[sctid-cl] subject==SCTID:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (SCTID)");
    predicate==skos:exactMatch               -> create_axiom("%subject_id EquivalentTo: %object_id");
    predicate==skos:broadMatch               -> create_axiom("%subject_id SubClassOf: %object_id");
    predicate==skos:narrowMatch              -> create_axiom("%object_id SubClassOf: %subject_id");
}


# Taxon-specific bridges.
[dhba-uberon] subject==DHBA:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}
[dhba-cl] subject==DHBA:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}

[ehdaa2-uberon] subject==EHDAA2:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (embryonic human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}
[ehdaa2-cl] subject==EHDAA2:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (embryonic human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}

[emapa-uberon] subject==EMAPA:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (embryonic mouse)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:10090)");
}
[emapa-cl] subject==EMAPA:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (embryonic mouse)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:10090)");
}

[fbbt-uberon] subject==FBbt:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (drosophila)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7227)");
}
[fbbt-cl] subject==FBbt:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (drosophila)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7227)");
}

[fbdv-uberon] subject==FBdv:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (drosophila)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7227)");
}
[fbdv-cl] subject==FBdv:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (drosophila)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7227)");
}

[fma-uberon] subject==FMA:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (post-embryonic human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}
[fma-cl] subject==FMA:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (post-embryonic human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}

[hao-uberon] subject==HAO:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (hymenoptera)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7399)");
}
[hao-cl] subject==HAO:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (hymenoptera)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7399)");
}

[hba-uberon] subject==HBA:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}
[hba-cl] subject==HBA:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}

[hsapdv-uberon] subject==HsapDv:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}
[hsapdv-cl] subject==HsapDv:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}

[kupo-uberon] subject==KUPO:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}
[kupo-cl] subject==KUPO:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (human)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9606)");
}

[ma-uberon] subject==MA:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (post-embryonic mouse)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:10090)");
}
[ma-cl] subject==MA:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (post-embryonic mouse)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:10090)");
}

[mmusdv-uberon] subject==MmusDv:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (mouse)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:10090)");
}
[mmusdv-cl] subject==MmusDv:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (mouse)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:10090)");
}

[pba-uberon] subject==PBA:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (primates)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9443)");
}
[pba-cl] subject==PBA:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (primates)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:9443)");
}

[spd-uberon] subject==SPD:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (spider)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:6893)");
}
[spd-cl] subject==SPD:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (spider)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:6893)");
}

[tads-uberon] subject==TADS:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (hardbacked ticks)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:6939)");
}
[tads-cl] subject==TADS:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (hardbacked ticks)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:6939)");
}

[tgma-uberon] subject==TGMA:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (mosquitos)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:44484)");
}
[tgma-cl] subject==TGMA:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (mosquitos)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:44484)");
}

[wbbt-uberon] subject==WBbt:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (worm)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:6237)");
}
[wbbt-cl] subject==WBbt:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (worm)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:6237)");
}

[wbls-uberon] subject==WBls:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (worm)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:6237)");
}
[wbls-cl] subject==WBls:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (worm)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:6237)");
}

[xao-uberon] subject==XAO:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (xenopus)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:8353)");
}
[xao-cl] subject==XAO:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (xenopus)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:8353)");
}

[zfa-uberon] subject==ZFA:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (zebrafish)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7954)");
}
[zfa-cl] subject==ZFA:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (zebrafish)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7954)");
}

[zfs-uberon] subject==ZFS:* object==UBERON:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (zebrafish)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7954)");
}
[zfs-cl] subject==ZFS:* object==CL:* {
    predicate==*                             -> annotate_subject(IAO:0000589, "%object_label (zebrafish)");
    predicate==semapv:crossSpeciesExactMatch -> create_axiom("%subject_id EquivalentTo: %object_id and (<%TAXREL> some NCBITaxon:7954)");
}

